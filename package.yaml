name: fortran-src
version: '0.16.7'
synopsis: Parsers and analyses for Fortran standards 66, 77, 90, 95 and 2003 (partial).
description: >-
  Provides lexing, parsing, and basic analyses of Fortran code covering
  standards: FORTRAN 66, FORTRAN 77, Fortran 90, Fortran 95, Fortran 2003
  (partial) and some legacy extensions. Includes data flow and basic block
  analysis, a renamer, and type analysis. For example usage, see the
  @<https://hackage.haskell.org/package/camfort CamFort>@ project, which uses
  fortran-src as its front end.
tested-with: GHC >= 9.0
github: camfort/fortran-src
bug-reports: https://github.com/camfort/fortran-src/issues
author: [Mistral Contrastin, Matthew Danish, Dominic Orchard, Andrew Rice]
maintainer: [Dominic Orchard]
category: Language
license: Apache-2.0
license-file: LICENSE

extra-source-files:
- README.md
- CHANGELOG.md
- test-data/**/*

# raehik's extensions (GHC 9.2; last updated: 2022-08-17)
default-extensions:
# project-specific
- TupleSections

# syntax that should be default
- EmptyCase
- LambdaCase
- InstanceSigs
- BangPatterns
- ExplicitNamespaces # 7.6

## deriving-related
- DerivingStrategies # 8.2
#- DerivingVia # 8.6
- StandaloneDeriving
- DeriveAnyClass
- DeriveGeneric
- DeriveDataTypeable
- DeriveFunctor
- DeriveFoldable
- DeriveTraversable
- DeriveLift

# features that should be default
- FlexibleContexts
- FlexibleInstances
- MultiParamTypeClasses
- GADTs
- PolyKinds
- RoleAnnotations # 7.8
- RankNTypes

# other features
- TypeApplications # 8.0
- DefaultSignatures
- TypeFamilies
- DataKinds

# other syntax
- MagicHash
#- ImportQualifiedPost # 8.10
#- StandaloneKindSignatures # 8.10
- BinaryLiterals # 7.10

# essential, but can break things, so be wary
- ScopedTypeVariables # changes type var scoping quite dramatically
- TypeOperators # interferes with the old `*` type

# useful extensions to know about, but which must be specified on-demand
#- UndecidableInstances

# --pedantic for building (not used for stack ghci)
ghc-options:
- -Wall
#- -Werror # appears bad to do in distribution, can be useful for development

dependencies:
- base >=4.6 && <5
- mtl >=2.2 && <3
- array >=0.5 && <0.6
- uniplate >=1.6 && <2
- GenericPretty >=1.2.2 && <2
- pretty >=1.1 && <2
- containers >=0.5 && <0.7
- text >=1.2 && <2.2
- bytestring >=0.10 && <0.13
- binary >=0.8.3.0 && <0.11
- filepath >=1.4 && <2
- directory >=1.2 && <2
- fgl >=5 && <6
- deepseq >=1.4 && <1.6
- filepath >=1.4 && <1.5
- temporary >=1.2 && <1.4
- either ^>=5.0.1.1
- process >= 1.2.0.0

- singletons      >= 3.0 && < 3.1

# 3.0 = GHC 9.0, 3.1 = GHC 9.2, 3.1.1 = GHC 9.4, 3.2 = GHC 9.6, 3.3 = GHC 9.8
- singletons-th   >= 3.0 && < 3.4
- singletons-base >= 3.0 && < 3.4

library:
  source-dirs: src
  ghc-options: -fno-warn-tabs
  build-tools:
  - alex >=3.1
  - happy >=1.19

executables:
  fortran-src:
    source-dirs: app
    main: Main.hs
    ghc-options: -fno-warn-tabs
    dependencies:
    - fortran-src

tests:
  spec:
    main: Spec.hs
    source-dirs: test
    build-tools:
    - hspec-discover
    dependencies:
    - fortran-src
    - deepseq >=1.4 && <1.6
    - hspec >=2.2 && <3
    - QuickCheck >=2.10 && <2.15

when:
- condition: os(windows)
  cpp-options:
  - -DFS_DISABLE_WIN_BROKEN_TESTS
